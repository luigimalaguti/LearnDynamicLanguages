Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term MUL power
Rule 5     term -> term DIV power
Rule 6     term -> power
Rule 7     power -> factor POW power
Rule 8     power -> factor
Rule 9     factor -> NUMBER
Rule 10    factor -> LPAR expression RPAR

Terminals, with rules where they appear

DIV                  : 5
LPAR                 : 10
MINUS                : 2
MUL                  : 4
NUMBER               : 9
PLUS                 : 1
POW                  : 7
RPAR                 : 10
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 10 0
factor               : 7 8
power                : 4 5 6 7
term                 : 1 2 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term MUL power
    (5) term -> . term DIV power
    (6) term -> . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    expression                     shift and go to state 1
    term                           shift and go to state 2
    power                          shift and go to state 3
    factor                         shift and go to state 4

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 2

    (3) expression -> term .
    (4) term -> term . MUL power
    (5) term -> term . DIV power

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    RPAR            reduce using rule 3 (expression -> term .)
    MUL             shift and go to state 9
    DIV             shift and go to state 10


state 3

    (6) term -> power .

    MUL             reduce using rule 6 (term -> power .)
    DIV             reduce using rule 6 (term -> power .)
    PLUS            reduce using rule 6 (term -> power .)
    MINUS           reduce using rule 6 (term -> power .)
    $end            reduce using rule 6 (term -> power .)
    RPAR            reduce using rule 6 (term -> power .)


state 4

    (7) power -> factor . POW power
    (8) power -> factor .

    POW             shift and go to state 11
    MUL             reduce using rule 8 (power -> factor .)
    DIV             reduce using rule 8 (power -> factor .)
    PLUS            reduce using rule 8 (power -> factor .)
    MINUS           reduce using rule 8 (power -> factor .)
    $end            reduce using rule 8 (power -> factor .)
    RPAR            reduce using rule 8 (power -> factor .)


state 5

    (9) factor -> NUMBER .

    POW             reduce using rule 9 (factor -> NUMBER .)
    MUL             reduce using rule 9 (factor -> NUMBER .)
    DIV             reduce using rule 9 (factor -> NUMBER .)
    PLUS            reduce using rule 9 (factor -> NUMBER .)
    MINUS           reduce using rule 9 (factor -> NUMBER .)
    $end            reduce using rule 9 (factor -> NUMBER .)
    RPAR            reduce using rule 9 (factor -> NUMBER .)


state 6

    (10) factor -> LPAR . expression RPAR
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term MUL power
    (5) term -> . term DIV power
    (6) term -> . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    expression                     shift and go to state 12
    term                           shift and go to state 2
    power                          shift and go to state 3
    factor                         shift and go to state 4

state 7

    (1) expression -> expression PLUS . term
    (4) term -> . term MUL power
    (5) term -> . term DIV power
    (6) term -> . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    term                           shift and go to state 13
    power                          shift and go to state 3
    factor                         shift and go to state 4

state 8

    (2) expression -> expression MINUS . term
    (4) term -> . term MUL power
    (5) term -> . term DIV power
    (6) term -> . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    term                           shift and go to state 14
    power                          shift and go to state 3
    factor                         shift and go to state 4

state 9

    (4) term -> term MUL . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    power                          shift and go to state 15
    factor                         shift and go to state 4

state 10

    (5) term -> term DIV . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    power                          shift and go to state 16
    factor                         shift and go to state 4

state 11

    (7) power -> factor POW . power
    (7) power -> . factor POW power
    (8) power -> . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 5
    LPAR            shift and go to state 6

    factor                         shift and go to state 4
    power                          shift and go to state 17

state 12

    (10) factor -> LPAR expression . RPAR
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAR            shift and go to state 18
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 13

    (1) expression -> expression PLUS term .
    (4) term -> term . MUL power
    (5) term -> term . DIV power

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    RPAR            reduce using rule 1 (expression -> expression PLUS term .)
    MUL             shift and go to state 9
    DIV             shift and go to state 10


state 14

    (2) expression -> expression MINUS term .
    (4) term -> term . MUL power
    (5) term -> term . DIV power

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAR            reduce using rule 2 (expression -> expression MINUS term .)
    MUL             shift and go to state 9
    DIV             shift and go to state 10


state 15

    (4) term -> term MUL power .

    MUL             reduce using rule 4 (term -> term MUL power .)
    DIV             reduce using rule 4 (term -> term MUL power .)
    PLUS            reduce using rule 4 (term -> term MUL power .)
    MINUS           reduce using rule 4 (term -> term MUL power .)
    $end            reduce using rule 4 (term -> term MUL power .)
    RPAR            reduce using rule 4 (term -> term MUL power .)


state 16

    (5) term -> term DIV power .

    MUL             reduce using rule 5 (term -> term DIV power .)
    DIV             reduce using rule 5 (term -> term DIV power .)
    PLUS            reduce using rule 5 (term -> term DIV power .)
    MINUS           reduce using rule 5 (term -> term DIV power .)
    $end            reduce using rule 5 (term -> term DIV power .)
    RPAR            reduce using rule 5 (term -> term DIV power .)


state 17

    (7) power -> factor POW power .

    MUL             reduce using rule 7 (power -> factor POW power .)
    DIV             reduce using rule 7 (power -> factor POW power .)
    PLUS            reduce using rule 7 (power -> factor POW power .)
    MINUS           reduce using rule 7 (power -> factor POW power .)
    $end            reduce using rule 7 (power -> factor POW power .)
    RPAR            reduce using rule 7 (power -> factor POW power .)


state 18

    (10) factor -> LPAR expression RPAR .

    POW             reduce using rule 10 (factor -> LPAR expression RPAR .)
    MUL             reduce using rule 10 (factor -> LPAR expression RPAR .)
    DIV             reduce using rule 10 (factor -> LPAR expression RPAR .)
    PLUS            reduce using rule 10 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 10 (factor -> LPAR expression RPAR .)
    $end            reduce using rule 10 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 10 (factor -> LPAR expression RPAR .)

